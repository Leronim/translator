859da95056a9bc96b1598d9edf8b7d65
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.createAnimatedAlways = createAnimatedAlways;var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _AnimatedNode2 = _interopRequireDefault(require("./AnimatedNode"));
var _invariant = _interopRequireDefault(require("fbjs/lib/invariant"));
var _val = require("../val");function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var

AnimatedAlways = function (_AnimatedNode) {(0, _inherits2.default)(AnimatedAlways, _AnimatedNode);var _super = _createSuper(AnimatedAlways);


  function AnimatedAlways(what) {var _this;(0, _classCallCheck2.default)(this, AnimatedAlways);
    (0, _invariant.default)(
    what instanceof _AnimatedNode2.default, "Reanimated: Animated.always node argument should be of type AnimatedNode but got " +
    what);

    _this = _super.call(this, { type: 'always', what: what }, [what]);
    _this._what = what;return _this;
  }(0, _createClass2.default)(AnimatedAlways, [{ key: "toString", value: function toString()

    {
      return "AnimatedAlways, id: " + this.__nodeID;
    } }, { key: "update", value: function update()

    {
      this.__getValue();
    } }, { key: "__onEvaluate", value: function __onEvaluate()

    {
      (0, _val.val)(this._what);
      return 0;
    } }]);return AnimatedAlways;}(_AnimatedNode2.default);


function createAnimatedAlways(item) {
  return new AnimatedAlways(item);
}