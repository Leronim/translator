1de51fdce3ce5f4dc7ebd86b53e1406e
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sortPills = exports.calculatingInLinePos = exports.checkOrder = exports.removePills = exports.isBetweenPills = void 0;

var isBetweenPills = function () {
  var _f = function _f(value, firstPosition, secondPosition) {
    return value >= firstPosition && value <= secondPosition;
  };

  _f._closure = {};
  _f.asString = "function _f(value,firstPosition,secondPosition){return value>=firstPosition&&value<=secondPosition;}";
  _f.__workletHash = 15586436948675;
  _f.__location = "/Users/leronim/Project/translator/utils/animationUtils.tsx (2:30)";

  global.__reanimatedWorkletInit(_f);

  return _f;
}();

exports.isBetweenPills = isBetweenPills;

var removePills = function () {
  var _f = function _f(positions, index) {
    var newPositions = positions.filter(function (_, id) {
      return id !== index;
    }).filter(function (pos) {
      return pos.order.value !== -1;
    }).sort(function (a, b) {
      return a.order.value > b.order.value ? 1 : -1;
    });
    newPositions.map(function (item, id) {
      return item.order.value = id;
    });
  };

  _f._closure = {};
  _f.asString = "function _f(positions,index){var newPositions=positions.filter(function(_,id){return id!==index;}).filter(function(pos){return pos.order.value!==-1;}).sort(function(a,b){return a.order.value>b.order.value?1:-1;});newPositions.map(function(item,id){return item.order.value=id;});}";
  _f.__workletHash = 11219272958733;
  _f.__location = "/Users/leronim/Project/translator/utils/animationUtils.tsx (7:27)";

  global.__reanimatedWorkletInit(_f);

  return _f;
}();

exports.removePills = removePills;

var checkOrder = function () {
  var _f = function _f(position) {
    return position.order.value !== -1;
  };

  _f._closure = {};
  _f.asString = "function _f(position){return position.order.value!==-1;}";
  _f.__workletHash = 11690083053170;
  _f.__location = "/Users/leronim/Project/translator/utils/animationUtils.tsx (16:26)";

  global.__reanimatedWorkletInit(_f);

  return _f;
}();

exports.checkOrder = checkOrder;

var calculatingInLinePos = function () {
  var _f = function _f(position, containerWidth) {
    var lineCount = 1;
    var newLine = 0;
    var newPosition = position.filter(checkOrder).sort(function (a, b) {
      return a.order.value > b.order.value ? 1 : -1;
    });

    if (newPosition.length === 0) {
      return;
    }

    newPosition.forEach(function (position, index) {
      var currentWidth = newPosition.slice(newLine, index).reduce(function (acc, item) {
        return acc + item.width.value;
      }, 0);

      if (currentWidth + position.width.value > containerWidth) {
        lineCount += 1;
        newLine = index;
        position.x.value = 0;
      } else {
        position.x.value = currentWidth;
      }

      if (lineCount < 2) {
        position.y.value = -120 * lineCount;
      } else {
        position.y.value = -60;
      }
    });
  };

  _f._closure = {
    checkOrder: checkOrder
  };
  _f.asString = "function _f(position,containerWidth){const{checkOrder}=jsThis._closure;{var lineCount=1;var newLine=0;var newPosition=position.filter(checkOrder).sort(function(a,b){return a.order.value>b.order.value?1:-1;});if(newPosition.length===0){return;}newPosition.forEach(function(position,index){var currentWidth=newPosition.slice(newLine,index).reduce(function(acc,item){return acc+item.width.value;},0);if(currentWidth+position.width.value>containerWidth){lineCount+=1;newLine=index;position.x.value=0;}else{position.x.value=currentWidth;}if(lineCount<2){position.y.value=-120*lineCount;}else{position.y.value=-60;}});}}";
  _f.__workletHash = 2505631515151;
  _f.__location = "/Users/leronim/Project/translator/utils/animationUtils.tsx (21:36)";

  global.__reanimatedWorkletInit(_f);

  return _f;
}();

exports.calculatingInLinePos = calculatingInLinePos;

var movePills = function () {
  var _f = function _f(input, from, to) {
    var offsets = input.slice();

    while (from < 0) {
      from += offsets.length;
    }

    while (to < 0) {
      to += offsets.length;
    }

    if (to >= offsets.length) {
      var k = to - offsets.length;

      while (k-- + 1) {
        offsets.push();
      }
    }

    offsets.splice(to, 0, offsets.splice(from, 1)[0]);
    return offsets;
  };

  _f._closure = {};
  _f.asString = "function _f(input,from,to){var offsets=input.slice();while(from<0){from+=offsets.length;}while(to<0){to+=offsets.length;}if(to>=offsets.length){var k=to-offsets.length;while(k--+1){offsets.push();}}offsets.splice(to,0,offsets.splice(from,1)[0]);return offsets;}";
  _f.__workletHash = 9371571946789;
  _f.__location = "/Users/leronim/Project/translator/utils/animationUtils.tsx (51:18)";

  global.__reanimatedWorkletInit(_f);

  return _f;
}();

var reBuildPosition = function () {
  var _f = function _f(positions, current, future) {
    var position = positions.filter(checkOrder).sort(function (a, b) {
      return a.order.value > b.order.value ? 1 : -1;
    });
    var newPosition = movePills(position, current, future);
    newPosition.map(function (position, index) {
      return position.order.value = index;
    });
  };

  _f._closure = {
    checkOrder: checkOrder,
    movePills: movePills
  };
  _f.asString = "function _f(positions,current,future){const{checkOrder,movePills}=jsThis._closure;{var position=positions.filter(checkOrder).sort(function(a,b){return a.order.value>b.order.value?1:-1;});var newPosition=movePills(position,current,future);newPosition.map(function(position,index){return position.order.value=index;});}}";
  _f.__workletHash = 42737863030;
  _f.__location = "/Users/leronim/Project/translator/utils/animationUtils.tsx (70:24)";

  global.__reanimatedWorkletInit(_f);

  return _f;
}();

var sortPills = function () {
  var _f = function _f(positions, transition, index, containerWidth, currentPosition) {
    positions.some(function (item, id) {
      if (id === index) {
        return true;
      } else if (item.order.value === -1) {
        return false;
      }

      var xSide = isBetweenPills(transition.x.value, item.x.value, item.x.value + item.width.value);
      var ySide = isBetweenPills(transition.y.value, item.y.value, item.y.value + 55);

      if (xSide && ySide) {
        reBuildPosition(positions, currentPosition.order.value, item.order.value);
        calculatingInLinePos(positions, containerWidth);
        return false;
      }
    });
  };

  _f._closure = {
    isBetweenPills: isBetweenPills,
    reBuildPosition: reBuildPosition,
    calculatingInLinePos: calculatingInLinePos
  };
  _f.asString = "function _f(positions,transition,index,containerWidth,currentPosition){const{isBetweenPills,reBuildPosition,calculatingInLinePos}=jsThis._closure;{positions.some(function(item,id){if(id===index){return true;}else if(item.order.value===-1){return false;}var xSide=isBetweenPills(transition.x.value,item.x.value,item.x.value+item.width.value);var ySide=isBetweenPills(transition.y.value,item.y.value,item.y.value+55);if(xSide&&ySide){reBuildPosition(positions,currentPosition.order.value,item.order.value);calculatingInLinePos(positions,containerWidth);return false;}});}}";
  _f.__workletHash = 13701237382002;
  _f.__location = "/Users/leronim/Project/translator/utils/animationUtils.tsx (79:25)";

  global.__reanimatedWorkletInit(_f);

  return _f;
}();

exports.sortPills = sortPills;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,