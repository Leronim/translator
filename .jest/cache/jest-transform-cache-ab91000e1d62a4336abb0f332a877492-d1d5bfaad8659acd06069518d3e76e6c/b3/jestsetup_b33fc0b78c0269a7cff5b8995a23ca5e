63b89a98aaa048a0f79d98a0f7a55634
function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {require("@babel/runtime/helpers/defineProperty")(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}require('./node_modules/react-native-reanimated/src/reanimated2/jestUtils').setUpTests();
var mock = jest.requireMock("react-native-reanimated");

jest.mock("react-native-reanimated", function () {return _objectSpread(_objectSpread({},
  mock), {}, {
    useSharedValue: jest.fn().mockReturnValue(0),
    useAnimatedStyle: jest.fn().mockReturnValue({}),
    useAnimatedScrollHandler: jest.fn().mockReturnValue({}),
    createAnimatedComponent: function createAnimatedComponent(component) {return jest.fn().mockReturnValue(component);},
    __reanimatedWorkletInit: jest.fn(),
    ScrollView: "ScrollView" });});


global.__reanimatedWorkletInit = jest.fn();