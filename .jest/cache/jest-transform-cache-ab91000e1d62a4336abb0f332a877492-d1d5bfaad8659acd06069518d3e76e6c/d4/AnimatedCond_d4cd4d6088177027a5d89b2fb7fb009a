452c35659ebf83026915588acdf165ad
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.createAnimatedCond = createAnimatedCond;var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _invariant = _interopRequireDefault(require("fbjs/lib/invariant"));
var _AnimatedBlock = require("../core/AnimatedBlock");
var _val = require("../val");
var _AnimatedNode2 = _interopRequireDefault(require("./AnimatedNode"));function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}var

AnimatedCond = function (_AnimatedNode) {(0, _inherits2.default)(AnimatedCond, _AnimatedNode);var _super = _createSuper(AnimatedCond);




  function AnimatedCond(condition, ifBlock, elseBlock) {var _this;(0, _classCallCheck2.default)(this, AnimatedCond);
    (0, _invariant.default)(
    condition instanceof _AnimatedNode2.default, "Reanimated: Animated.cond node first argument should be of type AnimatedNode but got " +
    condition);

    (0, _invariant.default)(
    ifBlock instanceof _AnimatedNode2.default, "Reanimated: Animated.cond node second argument should be of type AnimatedNode but got " +
    ifBlock);

    (0, _invariant.default)(
    elseBlock instanceof _AnimatedNode2.default || elseBlock === undefined, "Reanimated: Animated.cond node third argument should be of type AnimatedNode or should be undefined but got " +
    elseBlock);

    _this = _super.call(this,
    {
      type: 'cond',
      cond: condition,
      ifBlock: ifBlock,
      elseBlock: elseBlock },

    [condition, ifBlock, elseBlock]);

    _this._condition = condition;
    _this._ifBlock = ifBlock;
    _this._elseBlock = elseBlock;return _this;
  }(0, _createClass2.default)(AnimatedCond, [{ key: "toString", value: function toString()

    {
      return "AnimatedCond, id: " + this.__nodeID;
    } }, { key: "__onEvaluate", value: function __onEvaluate()

    {
      if ((0, _val.val)(this._condition)) {
        return (0, _val.val)(this._ifBlock);
      } else {
        return this._elseBlock !== undefined ? (0, _val.val)(this._elseBlock) : undefined;
      }
    } }]);return AnimatedCond;}(_AnimatedNode2.default);


function createAnimatedCond(cond, ifBlock, elseBlock) {
  return new AnimatedCond(
  (0, _AnimatedBlock.adapt)(cond),
  (0, _AnimatedBlock.adapt)(ifBlock),
  elseBlock === undefined ? undefined : (0, _AnimatedBlock.adapt)(elseBlock));

}