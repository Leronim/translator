89c6315362e16ac5bbd6d6aec427878e
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports, "__esModule", { value: true });exports.createOrReusePropsNode = createOrReusePropsNode;var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _reactNative = require("react-native");

var _AnimatedNode2 = _interopRequireDefault(require("./AnimatedNode"));
var _AnimatedEvent = _interopRequireDefault(require("./AnimatedEvent"));
var _AnimatedStyle = require("./AnimatedStyle");

var _invariant = _interopRequireDefault(require("fbjs/lib/invariant"));
var _areEqual = _interopRequireDefault(require("fbjs/lib/areEqual"));
var _val = require("../val");function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {(0, _defineProperty2.default)(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}

function sanitizeProps(inputProps) {
  var props;
  for (var key in inputProps) {
    var value = inputProps[key];
    if (value instanceof _AnimatedNode2.default && !(value instanceof _AnimatedEvent.default)) {
      if (props === undefined) {
        props = {};
      }
      props[key] = value.__nodeID;
    }
  }
  return props;
}

function createOrReusePropsNode(props, callback, oldNode) {
  if (props.style) {
    var style = (0, _AnimatedStyle.createOrReuseStyleNode)(
    props.style,
    oldNode && oldNode._props.style);

    if (style) {
      props = _objectSpread(_objectSpread({},
      props), {}, {
        style: style });

    }
  }
  var config = sanitizeProps(props);
  if (config === undefined) {
    return undefined;
  }
  if (oldNode && (0, _areEqual.default)(config, oldNode._config)) {
    return oldNode;
  }
  return new AnimatedProps(props, config, callback);
}var

AnimatedProps = function (_AnimatedNode) {(0, _inherits2.default)(AnimatedProps, _AnimatedNode);var _super = _createSuper(AnimatedProps);
  function AnimatedProps(props, config, callback) {var _this;(0, _classCallCheck2.default)(this, AnimatedProps);
    _this = _super.call(this,
    { type: 'props', props: config },
    Object.values(props).filter(function (n) {return !(n instanceof _AnimatedEvent.default);}));

    _this._config = config;
    _this._props = props;
    _this._callback = callback;
    _this.__attach();return _this;
  }(0, _createClass2.default)(AnimatedProps, [{ key: "toString", value: function toString()

    {
      return "AnimatedProps, id: " + this.__nodeID;
    } }, { key: "__onEvaluate", value: function __onEvaluate()

    {
      var props = {};
      for (var key in this._props) {
        var value = this._props[key];
        if (value instanceof _AnimatedNode2.default) {
          props[key] = value.__getValue();
        }
      }
      return props;
    } }, { key: "__detach", value: function __detach()

    {
      var nativeViewTag = (0, _reactNative.findNodeHandle)(this._animatedView);
      (0, _invariant.default)(
      nativeViewTag != null,
      'Unable to locate attached view in the native tree');

      this._disconnectAnimatedView(nativeViewTag);
      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedProps.prototype), "__detach", this).call(this);
    } }, { key: "update", value: function update()

    {
      this._callback();

      if (!this._animatedView) {
        return;
      }

      (0, _val.val)(this);
    } }, { key: "setNativeView", value: function setNativeView(

    animatedView) {
      if (this._animatedView === animatedView) {
        return;
      }
      this._animatedView = animatedView;

      var nativeViewTag = (0, _reactNative.findNodeHandle)(this._animatedView);
      (0, _invariant.default)(
      nativeViewTag != null,
      'Unable to locate attached view in the native tree');

      this._connectAnimatedView(nativeViewTag);
    } }]);return AnimatedProps;}(_AnimatedNode2.default);